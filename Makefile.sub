


R1000BIN = ${WORKDIR}/_obj/r1000sim.${BRANCH}

OBJDIR = ${WORKDIR}/_obj

r1000sim: ${R1000BIN}
	@echo "WORKDIR ${WORKDIR}"
	@echo "BRANCH ${BRANCH}"
	@echo "OPTIMIZE ${OPTIMIZE}"
	ln -sf ${R1000BIN} r1000sim

-include Makefile.local

include ${WORKDIR}/_obj/Makefile.flags

include Infra/Makefile.inc
include Dfs/Makefile.inc
include Diag/Makefile.inc
include Makefile.musashi.inc
include Iop/Makefile.inc
include Chassis/Makefile.inc
include Components/Makefile.inc

include ${WORKDIR}/Emu/${BRANCH}/Makefile.inc
include ${WORKDIR}/Fiu/${BRANCH}/Makefile.inc
include ${WORKDIR}/Ioc/${BRANCH}/Makefile.inc
include ${WORKDIR}/Mem32/${BRANCH}/Makefile.inc
include ${WORKDIR}/Seq/${BRANCH}/Makefile.inc
include ${WORKDIR}/Typ/${BRANCH}/Makefile.inc
include ${WORKDIR}/Val/${BRANCH}/Makefile.inc
include ${WORKDIR}/Chassis/${BRANCH}/Makefile.inc


CFLAGSMINUSI += -I.
CFLAGSMINUSD += -DMUSASHI_CNF='"Iop/musashi_conf.h"'

CFLAGS += -std=c17 ${OPTIMIZE} -pthread
CFLAGS += ${CFLAGSMINUSD}
CFLAGS += ${CFLAGSMINUSI}
CFLAGS += ${PARANOIA}

SC_API ?= -std=c++14
SC_I ?= -I/usr/local/include -I.
SC_L ?= -L/usr/local/lib -lsystemc

SC_CFLAGS += ${SC_API} ${OPTIMIZE} ${PARANOIA} ${PARANOIAXX} -pthread 
SC_CC = ${CXX} ${SC_CFLAGS} -I. ${SC_I} -c


${R1000BIN}:	${OBJS}
	${CXX} -o ${R1000BIN} ${R1000SIM} ${SC_CFLAGS} ${LDFLAGS} ${OBJS} ${SC_L}


#LDFLAGS	+= -lm
#
#PARANOIA = -Wall -Werror `sh cflags.sh "${CC}"`
#
## SANITIZE = -fsanitize=address
#
#CFLAGS += ${PARANOIA} ${SANITIZE}
#
#SC_OPT = -O2
#SC_WARN = ${PARANOIA} -Wno-cast-qual -Wno-cast-align -Wno-unused-parameter
#SC_WARN += ${SANITIZE}
#
#
#R1000DEP = Infra/r1000.h Infra/vqueue.h Infra/trace.h
#
#all:	netlist
#	@echo "# of automatic symbols: `grep OBJS -c Chassis/${SC_BRANCH}/Makefile.inc`"
#	${MAKE} r1000sim
#
#branchname:
#	@echo ${SC_BRANCH}
#
#.PHONY: netlist
#
#netlist:
#	-mkdir -p ${OBJDIR}
#	python3 -u NetList/process_kicad_netlists.py ${SC_BRANCH} ${NETLISTS}
#
#R1000SIM=${OBJDIR}/r1000sim.${SC_BRANCH}
#
#${R1000SIM}:	${OBJS}
#	@${CXX} -o ${R1000SIM} ${CFLAGS} ${LDFLAGS} ${OBJS} \
#		-L /usr/local/lib -lsystemc
#
#size: r1000sim
#	@size ${OBJS} | sort -n
#	@size r1000sim
#
#.PHONY: r1000sim
#
#r1000sim: ${R1000SIM}
#	-rm -f r1000sim
#	ln -s ${R1000SIM} r1000sim
#
#clean:
#	rm -f ${OBJS} ${CLEANFILES} *.tmp r1000sim*
#
#flint:
#	flexelint flint.lnt \
#		${CFLAGSMINUSD} \
#		${CFLAGSMINUSI} \
#		Dfs/*.c \
#		Diag/*.c \
#		Infra/*.c \
#		Iop/*.c \
#		Chassis/*.c \
#
#setup:
#	git clone https://github.com/Datamuseum-DK/Musashi
#	python3 -u fetch_firmware.py all
